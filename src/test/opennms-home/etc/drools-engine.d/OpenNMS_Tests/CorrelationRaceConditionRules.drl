package org.opennms.netmgt.correlation.drools

import org.opennms.netmgt.correlation.drools.DroolsCorrelationEngine
import org.opennms.netmgt.xml.event.AlarmData
import org.opennms.netmgt.xml.event.Event
import org.opennms.netmgt.xml.event.Parm
import org.opennms.netmgt.xml.event.Value
import org.slf4j.Logger
import org.opennms.netmgt.model.OnmsAlarm

global DroolsCorrelationEngine engine

declare Event
  @role(event)
  @timestamp(time)
  @expires(1h30m)
end

declare DeviceOfflineAffliction
  location : String
end

rule "DeviceAdopted: Delete Correlated DeviceOffline Event"
  salience 30
  no-loop true
  when
    $ae : Event(uei == "uei.opennms.org/tests/trapDeviceAdopted", dbid == 0, alarmData != null,
        $severity : severity, $uei : uei)
    Parm(parmName == "opennms_traceId", value.content != "", $uuid : value.content) from $ae.parmCollection
    Parm(parmName == "location", value.content != "", $location : value.content) from $ae.parmCollection
    Parm(parmName == "deviceName", value.content != "", $deviceName : value.content) from $ae.parmCollection
    $oe : Event(uei == "uei.opennms.org/tests/trapDeviceOffline", this before $ae)
    Parm(parmName == "location", value.content != "", $location == value.content) from $oe.parmCollection
    Parm(parmName == "deviceName", value.content != "", $deviceName == value.content) from $oe.parmCollection
  then
    delete($oe);
  end

rule "DeviceAdopted: Affliction Retracted"
  salience 20
  no-loop true
  when
    $ae : Event(uei == "uei.opennms.org/tests/trapDeviceAdopted", dbid == 0, alarmData != null,
        $severity : severity, $uei : uei)
    Parm(parmName == "location", value.content != "", $location : value.content) from $ae.parmCollection
    not(DeviceOfflineAffliction($location == location))
  then
    delete($ae);
  end
  
rule "DeviceAdopted: No Matching DeviceOffline Events"
  salience 10
  no-loop true
  when
    $ae : Event(uei == "uei.opennms.org/tests/trapDeviceAdopted", dbid == 0, alarmData != null,
        $severity : severity, $uei : uei)
    Parm(parmName == "location", value.content != "", $location : value.content) from $ae.parmCollection
    Parm(parmName == "deviceName", value.content != "", $deviceName : value.content) from $ae.parmCollection
    not (
      $oe : Event(uei == "uei.opennms.org/tests/trapDeviceOffline", this before $ae)
      and Parm(parmName == "location", value.content != "", $location == value.content) from $oe.parmCollection
      and Parm(parmName == "deviceName", value.content != "", $deviceName == value.content) from $oe.parmCollection
    )
  then
    delete($ae);
  end

rule "DeviceOffline: Create new affliction"
  salience 0
  no-loop true
  when
    $e : Event(uei == "uei.opennms.org/tests/trapDeviceOffline", dbid == 0, $severity : severity, $uei : uei)
    Parm(parmName == "opennms_traceId", value.content != "", $uuid : value.content) from $e.parmCollection
    Parm(parmName == "location", value.content != "", $location : value.content) from $e.parmCollection
    Parm(parmName == "deviceName", value.content != "", $deviceName : value.content) from $e.parmCollection
    Parm(parmName == "reductionKey", value.content != "", $reductionKey : value.content) from $e.parmCollection
    not Parm(parmName == "parseHwAddrFailed", value.content == "true") from $e.parmCollection
  then
    insertLogical(new DeviceOfflineAffliction($location));
  end